@model Account.Models.Topic

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutExam.cshtml";
}
@using Account.Models;
@{
    Paper paper = ViewBag.Paper;
}
<h2>@paper.PaperName - 添加考题</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>考题详情</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TopicID)
    @Html.Hidden("PaperID", @paper.PaperID)

    <div class="form-group">
        @Html.LabelFor(model => model.TopicExplain, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TopicExplain, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TopicExplain, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TopicScore, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TopicScore, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TopicScore, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TopicType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TopicType,ViewBag.Type as SelectList, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TopicType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TopicA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TopicA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TopicA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TopicB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TopicB, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TopicB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TopicC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TopicC, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TopicC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TopicD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TopicD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TopicD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TopicSort, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TopicSort, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TopicSort, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TopicAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TopicAnswer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TopicAnswer, "", new { @class = "text-danger" })
        </div>
    </div>

   
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="保存" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("返回试卷列表", "Index", "Papers")
</div>
